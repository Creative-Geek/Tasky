@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Light theme variables */
  --primary-color: #6366f1;
  --primary-hover: #4f46e5;
  --secondary-color: #f3f4f6;
  --text-color: #1f2937;
  --bg-color: #f9fafb;
  --card-color: #ffffff;
  --border-color: #e5e7eb;
  --error-color: #ef4444;
  --success-color: #10b981;

  /* Auth form variables */
  --auth-form-brand: var(--primary-color);
  --auth-form-brand-accent: var(--primary-hover);
  --auth-form-submit-button-text-color: #ffffff;
}

/* Dark theme variables */
.dark {
  --primary-color: #818cf8; /* Indigo-400 - slightly lighter for dark mode */
  --primary-hover: #6366f1; /* Indigo-500 */
  --secondary-color: #1f2937; /* Gray-800 */
  --text-color: #f3f4f6; /* Gray-100 */
  --bg-color: #111827; /* Gray-900 */
  --card-color: #1f2937; /* Gray-800 */
  --border-color: #374151; /* Gray-700 */

  /* Auth form variables for dark mode */
  --auth-form-brand: var(--primary-color);
  --auth-form-brand-accent: var(--primary-hover);
  --auth-form-submit-button-text-color: #ffffff;
}

@layer base {
  body {
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
  }
}

@layer components {
  .btn {
    @apply px-4 py-2 rounded-md transition-colors duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-offset-2;
  }

  .btn-primary {
    @apply bg-indigo-500 hover:bg-indigo-600 text-white focus:ring-indigo-500;
  }

  .btn-danger {
    @apply bg-red-500 hover:bg-red-600 text-white focus:ring-red-500;
  }

  .input {
    @apply px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2;
    background-color: var(--card-color);
    color: var(--text-color);
    border-color: var(--border-color);
  }

  .input:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px var(--primary-color);
  }

  .card {
    background-color: var(--card-color);
    border-color: var(--border-color);
    @apply rounded-lg shadow overflow-hidden border;
    transition: background-color 0.3s ease, border-color 0.3s ease;
  }

  /* Simple touch handling for drag and drop */
  .cursor-move {
    touch-action: none;
  }

  /* Handle long words in task titles and descriptions */
  .break-words {
    word-wrap: break-word;
    overflow-wrap: break-word;
    word-break: break-word;
    hyphens: auto;
  }

  /* Preserve line breaks in task descriptions */
  .preserve-line-breaks {
    white-space: pre-line;
  }

  /* Ensure dragged items maintain their width */
  [data-dragging="true"] {
    width: var(--original-width, auto) !important;
    min-width: var(--original-width, auto) !important;
    max-width: var(--original-width, 100%) !important;
    transform-origin: center center !important;
    transform: translate3d(var(--x, 0), var(--y, 0), 0) !important;
    box-sizing: border-box !important;
    height: auto !important;
    flex-shrink: 0 !important;
    transition: none !important; /* Ensure no transition delay for dragged item */
  }

  /* Smooth animation for items being repositioned */
  .card {
    will-change: transform, opacity; /* Optimize for animations */
  }

  /* Apply smooth transitions to non-dragged items when something is being dragged */
  [data-any-dragging="true"]:not([data-dragging="true"]) {
    transition: transform 250ms cubic-bezier(0.2, 0, 0, 1) !important;
  }

  /* Ensure task items animate smoothly when other tasks are removed */
  .space-y-3.transition-all > * {
    transition: transform 300ms cubic-bezier(0.2, 0, 0, 1),
      opacity 300ms cubic-bezier(0.2, 0, 0, 1);
  }

  /* Animation for new tasks */
  @keyframes slide-in-from-top {
    0% {
      opacity: 0;
      transform: translateY(-50px);
      box-shadow: 0 0 0 rgba(99, 102, 241, 0);
    }
    70% {
      opacity: 1;
      transform: translateY(0);
      box-shadow: 0 0 15px rgba(99, 102, 241, 0.5);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
      box-shadow: 0 0 0 rgba(99, 102, 241, 0);
    }
  }

  .new-task-animation {
    animation: slide-in-from-top 0.6s cubic-bezier(0.2, 0, 0, 1);
    animation-fill-mode: both; /* Ensure the animation only plays once */
  }

  /* Task completion animations */
  @keyframes draw-checkmark {
    0% {
      stroke-dashoffset: 100;
      opacity: 0.7;
    }
    100% {
      stroke-dashoffset: 0;
      opacity: 0.7;
    }
  }

  @keyframes undraw-checkmark {
    0% {
      stroke-dashoffset: 0;
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
    100% {
      stroke-dashoffset: 100;
      opacity: 0;
    }
  }

  @keyframes fill-checkmark {
    0%,
    10% {
      opacity: 0.7;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes unfill-checkmark {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes fade-in-circle {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  /* Task deletion animation */
  @keyframes scale-down-out {
    0% {
      transform: scale(1);
      opacity: 1;
      margin-bottom: 0.75rem; /* space-y-3 equivalent */
      max-height: 500px;
    }
    90% {
      transform: scale(0.8);
      opacity: 0;
      margin-bottom: 0.75rem; /* space-y-3 equivalent */
      max-height: 500px;
    }
    100% {
      transform: scale(0.8);
      opacity: 0;
      margin-bottom: 0;
      max-height: 0;
      padding: 0;
      border-width: 0;
    }
  }

  @keyframes strikethrough {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  @keyframes unstrikethrough {
    0% {
      width: 100%;
      opacity: 1;
    }
    100% {
      width: 0;
      opacity: 1;
    }
  }

  .checkmark-animation {
    animation: draw-checkmark 0.5s ease forwards,
      fill-checkmark 0.3s ease-in-out 0.4s forwards;
  }

  .uncheckmark-animation {
    animation: undraw-checkmark 0.6s ease-in-out forwards;
  }

  .strikethrough-animation {
    position: relative;
    display: inline-block;
  }

  .strikethrough-animation::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 0;
    height: 0.5px;
    background-color: currentColor;
    animation: strikethrough 0.4s ease-out 0.2s forwards;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .unstrikethrough-animation {
    position: relative;
    display: inline-block;
  }

  .unstrikethrough-animation::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 0.5px;
    background-color: currentColor;
    animation: unstrikethrough 0.5s ease-in-out forwards;
    transform: translateY(-50%);
    pointer-events: none;
    transform-origin: left center;
  }

  .fade-in-circle {
    animation: fade-in-circle 0.3s ease-in-out forwards;
  }

  .delete-task-animation {
    animation: scale-down-out 0.5s cubic-bezier(0.2, 0, 0, 1) forwards;
    pointer-events: none; /* Prevent interaction during animation */
    overflow: hidden;
  }

  /* Animation for tasks moving up to fill space */
  @keyframes move-up {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(
        var(--move-up-distance, calc(-100% - 0.75rem))
      ); /* Move up by calculated distance */
    }
  }

  .task-move-up {
    animation: move-up 0.5s cubic-bezier(0.2, 0, 0, 1) 0.1s forwards; /* Slight delay to start after delete animation begins */
    position: relative; /* Needed for z-index to work */
    z-index: 5; /* Ensure moving tasks appear above the deleting task */
  }

  /* Animation for flyout notifications */
  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.3s ease-out forwards;
  }

  /* Status indicators for tasks removed to make interaction seamless */

  /* Fix for login/signup form input text color */
  /* Target auth form inputs specifically with high specificity */
  .card form input,
  .card form input[type="text"],
  .card form input[type="password"],
  .card form input[type="email"] {
    color: #000000 !important; /* Force black text in auth form inputs */
  }
}
